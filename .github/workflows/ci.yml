name: CI/CD

on:
  push:
    branches:
      - master
      - v0.1.0-alpha
  pull_request:
    branches:
      - master
      - v0.1.0-alpha

jobs:
  build-source:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Cache CUDA Toolkit
        id: cache-cuda-toolkit
        uses: actions/cache@v2
        with:
          path: /var/cuda-repo-ubuntu2204-12-1-local
          key: ${{ runner.os }}-cuda-toolkit-${{ hashFiles('cuda-repo-ubuntu2204-12-1-local_12.1.1-530.30.02-1_amd64.deb') }}
          restore-keys: |
            ${{ runner.os }}-cuda-toolkit-
      - name: Install CUDA toolkit
        run: |
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin
          sudo mv cuda-ubuntu2204.pin /etc/apt/preferences.d/cuda-repository-pin-600
          wget https://developer.download.nvidia.com/compute/cuda/12.1.1/local_installers/cuda-repo-ubuntu2204-12-1-local_12.1.1-530.30.02-1_amd64.deb
          if [ -z "${{ steps.cache-cuda-toolkit.outputs.cache-hit }}" ]; then
            sudo dpkg -i cuda-repo-ubuntu2204-12-1-local_12.1.1-530.30.02-1_amd64.deb
          else
            echo "CUDA Toolkit is already cached."
          fi
          sudo cp /var/cuda-repo-ubuntu2204-12-1-local/cuda-*-keyring.gpg /usr/share/keyrings/
          sudo apt-get update
          sudo apt-get -y install cuda
      
      - name: Cache CUDA Docker Image
        uses: actions/cache@v2
        with:
          path: /var/lib/docker
          key: ${{ runner.os }}-cuda-docker-${{ hashFiles('cuda-docker-image-cache-key.txt') }}
          restore-keys: |
            ${{ runner.os }}-cuda-docker-
      - name: Pull Docker Image
        run: docker pull nvidia/cuda:12.1.1-cudnn8-devel-ubuntu22.04

      - name: Build CUDA Target
        run: docker build . --target build

  build-maven-project:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 18
          distribution: 'adopt'
      
      - name: Check for plugin updates
        run: |
          cd ./kotlin
          mvn dependency:resolve-plugins
      
      - name: Install Samver
        run: |
          cd ./kotlin
          mvn org.apache.maven.plugins:maven-dependency-plugin:3.2.0:get -Dartifact=com.system.tensorhub:samver:19.0.2+7

      - name: Print Dependency Tree
        run: | 
          cd ./kotlin
          mvn dependency:tree

